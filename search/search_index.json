{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\ud83d\udc4b Welcome to TechOps","text":"<p>TechOps is a practical, no-fluff knowledge base for IT professionals, DevOps engineers, and system administrators. It's designed to give you fast, reliable answers to the tools you use every day \u2014 from Linux basics to advanced Ansible playbooks.</p>"},{"location":"#what-youll-find-here","title":"\ud83d\udd0d What You\u2019ll Find Here","text":"<ul> <li> <p>Linux Commands   Essential one-liners, systemctl usage, user management, and troubleshooting.</p> </li> <li> <p>Ansible   Playbooks, roles, vault usage, and real-world automation examples.</p> </li> <li> <p>Docker &amp; Kubernetes   Simplified container and orchestration workflows with cheat sheets and best practices.</p> </li> <li> <p>Git &amp; CI/CD   Daily git commands, branching workflows, Jenkins pipelines, and GitHub Actions.</p> </li> <li> <p>Bonus Tools   SSH tips, monitoring tools, and scripts we use in the trenches every day.</p> </li> </ul>"},{"location":"#who-is-this-for","title":"\ud83d\udc68\u200d\ud83d\udcbb Who Is This For?","text":"<p>If you: - Work in IT operations, DevOps, or Cloud engineering - Constantly Google the same Linux commands - Want a personal or team-friendly static knowledge base - Prefer clear examples over theory</p> <p>\u2026you\u2019ll feel right at home.</p>"},{"location":"#getting-started","title":"\ud83d\ude80 Getting Started","text":"<p>Use the menu on the left to jump into any topic. This site is always evolving, so bookmark it and come back often.</p> <p>Happy automating!</p>"},{"location":"ansible/","title":"Introduction to Ansible","text":"<p>Ansible is a popular open-source automation tool used by IT professionals and DevOps engineers to automate the configuration, management, and deployment of applications across multiple servers.</p>"},{"location":"ansible/#why-ansible","title":"Why Ansible?","text":"<ul> <li>Agentless: No need to install any agent software on target machines.</li> <li>Simple syntax: Uses YAML for easy-to-read and write playbooks.</li> <li>Powerful: Automate complex tasks, deploy applications, and orchestrate workflows.</li> <li>Scalable: Manage anything from a few servers to thousands.</li> <li>Flexible: Works with Linux, cloud platforms, containers, and more.</li> </ul>"},{"location":"ansible/#how-ansible-works","title":"How Ansible Works","text":"<p>Ansible connects to your target machines over SSH and executes small programs called modules to perform tasks such as installing software, copying files, or restarting services.</p> <p>Key components:</p> <ul> <li>Inventory: A list of hosts to manage.</li> <li>Playbooks: YAML files describing automation workflows.</li> <li>Modules: Reusable units of work.</li> <li>Roles: Collections of tasks, templates, and files for modular management.</li> </ul>"},{"location":"ansible/#basic-example-ping-test","title":"Basic Example: Ping Test","text":"<p>Check if Ansible can reach all your hosts by running:</p> <pre><code>ansible all -i inventory.ini -m ping\n</code></pre>"},{"location":"ansible/setup/","title":"Vagrant Ansible Lab Setup Guide","text":"<p>This guide will walk you through setting up a local Ansible control node and multiple managed nodes using Vagrant.</p>"},{"location":"ansible/setup/#vagrant-ansible-lab-architecture","title":"Vagrant Ansible Lab Architecture","text":"<pre><code>graph TD\n    Host[Host Machine] --&gt;|Vagrant| VirtualBox\n    VirtualBox --&gt; Control[Control Node 192.168.56.10 Ansible]\n    Control --&gt;|SSH| Managed1[Managed Node 1 192.168.56.11]\n    Control --&gt;|SSH| Managed2[Managed Node 2 192.168.56.12]\n    Control --&gt;|SSH| ManagedN[Managed Node 192.168.56.1X]\n\n</code></pre>"},{"location":"ansible/setup/#prerequisites","title":"Prerequisites","text":"<p>Before you begin, ensure you have the following installed on your host machine:</p> <ul> <li>Vagrant: Download and install from: https://www.vagrantup.com/downloads</li> <li>VirtualBox (or another Vagrant provider): Download and install from https://www.virtualbox.org/wiki/Downloads</li> <li>Youtube Ref link: Ansible-Setup</li> </ul>"},{"location":"ansible/setup/#setup-steps","title":"Setup Steps","text":"<p>Follow these steps to get your Ansible lab up and running:</p>"},{"location":"ansible/setup/#step-1-create-project-directory-and-vagrantfile","title":"Step 1: Create Project Directory and Vagrantfile","text":"<p>Create a new directory for your project. You can name it <code>ansible_vagrant_lab</code> or anything you prefer.</p> <pre><code>mkdir ansible_vagrant_lab\ncd ansible_vagrant_lab\n</code></pre> <p>Inside this new directory, create a file named Vagrantfile.</p> <pre><code>touch Vagrantfile\n</code></pre> <p>Open the Vagrantfile with your preferred text editor and paste the following content into it:</p> <pre><code># -*- mode: ruby -*-\n# vi: set ft=ruby :\n\nVagrant.configure(\"2\") do |config|\n\n  VAGRANT_NUM_MANAGED_NODES = 2\n  VAGRANT_IP_PREFIX = \"192.168.56.\"\n\n  config.vm.box = \"ubuntu/focal64\"\n  config.vm.box_check_update = false\n\n  # Generate SSH key on host if not exists\n  unless File.exist?(\"ansible_id_rsa\")\n    system(\"ssh-keygen -t rsa -b 2048 -f ansible_id_rsa -N ''\")\n  end\n\n  def host_entries\n    entries = [\"192.168.56.10 ansible-control\"]\n    (1..VAGRANT_NUM_MANAGED_NODES).each do |i|\n      entries &lt;&lt; \"192.168.56.#{10 + i} ansible-managed-#{i}\"\n    end\n    entries.join(\"\\n\")\n  end\n\n  # Shared synced folder to copy keys\n  config.vm.synced_folder \".\", \"/vagrant\", type: \"virtualbox\"\n\n  # --- Control Node ---\n  config.vm.define \"ansible-control\" do |control|\n    control.vm.hostname = \"ansible-control\"\n    control.vm.network \"private_network\", ip: \"#{VAGRANT_IP_PREFIX}10\"\n\n    control.vm.provider \"virtualbox\" do |vb|\n      vb.name = \"ansible-control\"\n      vb.memory = \"1024\"\n      vb.cpus = \"1\"\n    end\n\n    control.vm.provision \"shell\", inline: &lt;&lt;-SHELL\n      sudo apt-get update\n      sudo apt-get install -y ansible python3-pip\n\n      # Create ansible user and give sudo\n      sudo useradd -m -s /bin/bash ansible\n      echo \"ansible:ansible\" | sudo chpasswd\n      echo \"ansible ALL=(ALL) NOPASSWD: ALL\" | sudo tee /etc/sudoers.d/ansible\n\n      # Install private key\n      sudo mkdir -p /home/ansible/.ssh\n      sudo cp /vagrant/ansible_id_rsa /home/ansible/.ssh/id_rsa\n      sudo cp /vagrant/ansible_id_rsa.pub /home/ansible/.ssh/id_rsa.pub\n      sudo chown -R ansible:ansible /home/ansible/.ssh\n      sudo chmod 600 /home/ansible/.ssh/id_rsa\n      sudo chmod 644 /home/ansible/.ssh/id_rsa.pub\n\n      # Write Ansible inventory\n      echo \"[managed]\" | sudo tee /etc/ansible/hosts\n      for i in $(seq 1 #{VAGRANT_NUM_MANAGED_NODES}); do\n        ip=$((10 + i))\n        echo \"ansible-managed-${i} ansible_host=#{VAGRANT_IP_PREFIX}${ip} ansible_user=ansible ansible_ssh_private_key_file=/home/ansible/.ssh/id_rsa\" | sudo tee -a /etc/ansible/hosts\n      done\n\n      echo \"#{host_entries}\" | sudo tee -a /etc/hosts\n    SHELL\n  end\n\n  # --- Managed Nodes ---\n  (1..VAGRANT_NUM_MANAGED_NODES).each do |i|\n    config.vm.define \"ansible-managed-#{i}\" do |managed|\n      managed.vm.hostname = \"ansible-managed-#{i}\"\n      managed.vm.network \"private_network\", ip: \"#{VAGRANT_IP_PREFIX}#{10 + i}\"\n\n      managed.vm.provider \"virtualbox\" do |vb|\n        vb.name = \"ansible-managed-#{i}\"\n        vb.memory = \"512\"\n        vb.cpus = \"1\"\n      end\n\n      managed.vm.provision \"shell\", inline: &lt;&lt;-SHELL\n        sudo apt-get update\n        sudo apt-get install -y python3 openssh-server\n\n        # Create ansible user and install public key\n        sudo useradd -m -s /bin/bash ansible\n        echo \"ansible:ansible\" | sudo chpasswd\n        echo \"ansible ALL=(ALL) NOPASSWD: ALL\" | sudo tee /etc/sudoers.d/ansible\n\n        sudo mkdir -p /home/ansible/.ssh\n        sudo cp /vagrant/ansible_id_rsa.pub /home/ansible/.ssh/authorized_keys\n        sudo chown -R ansible:ansible /home/ansible/.ssh\n        sudo chmod 600 /home/ansible/.ssh/authorized_keys\n\n        echo \"#{host_entries}\" | sudo tee -a /etc/hosts\n      SHELL\n    end\n  end\nend\n</code></pre>"},{"location":"ansible/setup/#step-2-customize-vagrantfile-optional","title":"Step 2: Customize Vagrantfile (Optional)","text":"<p>You can modify the following variables in your Vagrantfile to suit your needs: <pre><code>VAGRANT_NUM_MANAGED_NODES: Change the value 2 to your desired number of Ansible managed nodes.\nVAGRANT_IP_PREFIX: If you prefer a different private IP address range for your VMs, change \"192.168.56.\" to your desired prefix.\n</code></pre></p>"},{"location":"ansible/setup/#step-3-start-the-virtual-machines","title":"Step 3: Start the Virtual Machines","text":"<p>Navigate to your ansible_vagrant_lab directory in your terminal and run the following command:</p> <pre><code>vagrant up\n</code></pre> <p>This command will:</p> <p>Download the ubuntu/focal64 Vagrant box (if you don't have it locally). Create and configure the ansible-control VM. Create and configure the specified number of ansible-managed-X VMs. This process may take some time depending on your internet connection and system resources.</p>"},{"location":"ansible/setup/#step-4-connect-to-the-ansible-control-node","title":"Step 4: Connect to the Ansible Control Node","text":"<p>Once vagrant up completes, you can SSH into your Ansible control node:</p> <pre><code>vagrant ssh ansible-control\n</code></pre>"},{"location":"ansible/setup/#step-5-verify-ansible-setup-on-control-node","title":"Step 5: Verify Ansible Setup on Control Node","text":"<p>After connecting to the ansible-control VM, you can verify that Ansible is installed and the inventory file has been generated correctly:</p> <pre><code>ansible --version\ncat /etc/ansible/hosts\n</code></pre> <p>You should see output similar to this, listing your managed nodes with their assigned IP addresses: <pre><code>[managed]\nansible-managed-1 ansible_host=192.168.56.11 ansible_user=vagrant ansible_ssh_private_key_file=/home/vagrant/.ssh/id_rsa\nansible-managed-2 ansible_host=192.168.56.12 ansible_user=vagrant ansible_ssh_private_key_file=/home/vagrant/.ssh/id_rsa\n</code></pre></p>"},{"location":"ansible/setup/#step-6-change-user","title":"Step 6: Change user","text":"<pre><code># Swtich user vagrant to ansible user\nsu - ansible \n# Password : ansible\n</code></pre>"},{"location":"ansible/setup/#step-7-test-ansible-ping","title":"Step 7: Test Ansible Ping","text":"<pre><code>sudo -u ansible ansible all -m ping\n</code></pre>"},{"location":"ansible/setup/#step-8-clean-up-optional","title":"Step 8: Clean Up (Optional)","text":"<p>When you are finished with your lab and want to remove the virtual machines from your system, run the following command from your host machine (in the ansible_vagrant_lab directory):</p> <p><pre><code>vagrant destroy -f\n</code></pre> This will power down and delete all the VMs created by the Vagrantfile.</p>"}]}